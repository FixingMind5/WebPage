version: '3'

volumes:
    production_postgres_data: {}
    production_postgres_data_backups: {}
    production_traefik: {}

services:
    django: &django
        build:
            context: .
            dockerfile: ./compose/production/django/Dockerfile
        image: skyhack_production_django
        depends_on:
            - postgres
            - redis
        env_file:
            - ./.envs/.production/.django
            - ./.envs/.production/.postgres
        command: /start

    postgres:
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
        image: skyhack_production_postgres
        volumes:
            - production_postgres_data:/var/lib/postgres/data
            - production_postgres_data_backups:/backups
        env_file:
            - ./.envs/.production/.postgres

    caddy:
        build:
            context: .
            dockerfile: ./compose/production/caddy/Dockerfile
        image: skyhack_production_caddy
        depends_on:
            - django
        volumes:
            - production_caddy:/root/.caddy
        env_file:
            - ./.envs/.production/.caddy
        ports:
            - "0.0.0.0:80:80"
            - "0.0.0.0:443:443"
    
        
    traefik:
        build:
            context: .
            dockerfile: ./compose/production/traefik/Dockerfile
        image: skyhack_production_traefik
        depends_on:
            - django
        volumes:
            - production_traefik:/etc/traefik/acme
        ports:
            - "0.0.0.0:80:80"
            - "0.0.0.0:443:443"
            - "0.0.0.0:5555:5555"
    
    redis:
        image: redis:5.0

    celeryworker:
        <<: *django
        image: skyhack_production_celeryworker
        command: /start-celeryworker

    celerybeat:
        <<: *django
        image: skyhack_production_celerybeat
        command: /start-celerybeat

    flower:
        <<: *django
        image: skyhack_production_flower
        command: /start-flower